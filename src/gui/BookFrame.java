/*
  * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.PopupMenuEvent;
import javax.swing.event.PopupMenuListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import dao.DAO_Sanpham;
import entity.LoaiSanpham;
import entity.NhaCungcap;
import entity.Sanpham;

/**
 *
 * @author Lenovo
 */
public class BookFrame extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private JButton btnChonanh, btnIn, btnLuu, btnReset, btnSua, btnThem, btnThoat, btnTim, btnXoa;

	private javax.swing.JComboBox<String> cbLoaiSP, cbMaNCC;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JLabel labelDonGia;
	private javax.swing.JLabel labelHinhAnh;
	private javax.swing.JLabel labelLoaiSP;
	private javax.swing.JLabel labelMaNCC;
	private javax.swing.JLabel labelMaSP;
	private javax.swing.JLabel labelNXB;
	private javax.swing.JLabel labelQLSP;
	private javax.swing.JLabel labelSoLuongTon;
	private javax.swing.JLabel labelSoTrang;
	private javax.swing.JLabel labelTenSP;
	private javax.swing.JLabel labelTenSPTimKiem;
	private javax.swing.JLabel labelTenTG;
	private javax.swing.JLabel labelTrangThai;
	private javax.swing.JPanel panelQuanLySP;
	private javax.swing.JTable tableQuanLySP;
	private javax.swing.JTextField txtDonGia, txtMaSP, txtNXB, txtSoLuongTon, txtSoTrang, txtTenSP, txtTenSPTimKiem,
			txtTenTG, txtTrangThai;
	private DefaultTableModel model;
	private String path = "";
	private int chucnang = 0;

	public BookFrame() throws SQLException {
		initComponents();
		this.setLocationRelativeTo(null);
		this.setResizable(false);
		disabled();
		showProductTable();
//        loadCbLoaiSp();
		loadCbNhacungcap();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */

	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		panelQuanLySP = new javax.swing.JPanel();
		labelQLSP = new javax.swing.JLabel();
		jSeparator1 = new javax.swing.JSeparator();
		btnThoat = new javax.swing.JButton();
		labelHinhAnh = new javax.swing.JLabel();
		labelMaSP = new javax.swing.JLabel();
		txtMaSP = new javax.swing.JTextField();
		labelTenSP = new javax.swing.JLabel();
		txtTenSP = new javax.swing.JTextField();
		labelDonGia = new javax.swing.JLabel();
		txtDonGia = new javax.swing.JTextField();
		labelSoLuongTon = new javax.swing.JLabel();
		txtSoLuongTon = new javax.swing.JTextField();
		labelTrangThai = new javax.swing.JLabel();
		txtTrangThai = new javax.swing.JTextField();
		labelMaNCC = new javax.swing.JLabel();
		labelTenTG = new javax.swing.JLabel();
		txtTenTG = new javax.swing.JTextField();
		labelSoTrang = new javax.swing.JLabel();
		txtSoTrang = new javax.swing.JTextField();
		labelNXB = new javax.swing.JLabel();
		txtNXB = new javax.swing.JTextField();
		cbMaNCC = new javax.swing.JComboBox<>();
		btnXoa = new javax.swing.JButton();
		btnSua = new javax.swing.JButton();
		btnLuu = new javax.swing.JButton();
		btnIn = new javax.swing.JButton();
		btnReset = new javax.swing.JButton();
		txtTenSPTimKiem = new javax.swing.JTextField();
		btnTim = new javax.swing.JButton();
		labelTenSPTimKiem = new javax.swing.JLabel();
		labelLoaiSP = new javax.swing.JLabel();
		cbLoaiSP = new javax.swing.JComboBox<>();
		btnChonanh = new javax.swing.JButton();
		btnThem = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		tableQuanLySP = new javax.swing.JTable();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		panelQuanLySP.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

		labelQLSP.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
		labelQLSP.setText("QUẢN LÝ SÁCH");

		btnThoat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/out.png"))); // NOI18N
		btnThoat.setText("Thoát");
		btnThoat.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThoatActionPerformed(evt);
			}
		});

		labelHinhAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		labelHinhAnh.setText("Ảnh");
		labelHinhAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

		labelMaSP.setText("Mã sản phẩm");

		labelTenSP.setText("Tên sản phẩm");

		labelDonGia.setText("Đơn giá");

		labelSoLuongTon.setText("Sô lượng tồn");

		labelTrangThai.setText("Trạng thái");

		labelMaNCC.setText("Mã nhà cung cấp");

		labelTenTG.setText("Tên tác giả");

		labelSoTrang.setText("Số trang");

		labelNXB.setText("Nhà xuất bản");

		cbMaNCC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {}));

		btnXoa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
		btnXoa.setText("Xóa");
		btnXoa.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				try {
					btnXoaActionPerformed(e);
				} catch (SQLException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}

			}
		});

		btnSua.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/fix.png"))); // NOI18N
		btnSua.setText("Sửa");
		btnSua.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnSuaActionPerformed(evt);
			}
		});

		btnLuu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnLuu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/save.png"))); // NOI18N
		btnLuu.setText("Lưu");
		btnLuu.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnLuuActionPerformed(evt);
			}
		});

		btnIn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/printer.png"))); // NOI18N
		btnIn.setText("  In");
		btnIn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnInActionPerformed(evt);
			}
		});

		btnReset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/reset.png"))); // NOI18N
		btnReset.setText("Quay lại");
		btnReset.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnResetActionPerformed(evt);
			}
		});

		btnTim.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnTim.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N
		btnTim.setText("Tìm");
		btnTim.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTimActionPerformed(evt);
			}
		});

		labelTenSPTimKiem.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
		labelTenSPTimKiem.setText("Tên Sản Phẩm");

		labelLoaiSP.setText("Loại sản phẩm");

		cbLoaiSP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sách" }));
		cbLoaiSP.addPopupMenuListener(new PopupMenuListener() {

			@Override
			public void popupMenuWillBecomeVisible(PopupMenuEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void popupMenuWillBecomeInvisible(PopupMenuEvent e) {
				cbLoaiSPPopupMenuWillBecomeInvisible(e);

			}

			@Override
			public void popupMenuCanceled(PopupMenuEvent e) {
				// TODO Auto-generated method stub

			}
		});

		btnChonanh.setText("Chọn ảnh");
		btnChonanh.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnChonanhActionPerformed(evt);
			}
		});

		btnThem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
		btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
		btnThem.setText("Thêm");
		btnThem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnThemActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout panelQuanLySPLayout = new javax.swing.GroupLayout(panelQuanLySP);
		panelQuanLySP.setLayout(panelQuanLySPLayout);
		panelQuanLySPLayout.setHorizontalGroup(panelQuanLySPLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
				.addGroup(panelQuanLySPLayout.createSequentialGroup().addContainerGap().addGroup(panelQuanLySPLayout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
						.addGroup(panelQuanLySPLayout.createSequentialGroup().addComponent(labelNXB).addGap(18, 18, 18)
								.addComponent(txtNXB, javax.swing.GroupLayout.PREFERRED_SIZE, 181,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGroup(panelQuanLySPLayout.createSequentialGroup()
								.addGroup(panelQuanLySPLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addGroup(panelQuanLySPLayout.createSequentialGroup()
												.addComponent(labelHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 200,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(29, 29, 29))
										.addGroup(javax.swing.GroupLayout.Alignment.LEADING,
												panelQuanLySPLayout.createSequentialGroup().addGap(12, 12, 12)
														.addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE,
																141, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
								.addGroup(panelQuanLySPLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addGroup(panelQuanLySPLayout.createSequentialGroup().addComponent(labelLoaiSP)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
												.addComponent(cbLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 181,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(panelQuanLySPLayout.createSequentialGroup().addComponent(labelDonGia)
												.addGap(18, 18, 18).addComponent(txtDonGia,
														javax.swing.GroupLayout.PREFERRED_SIZE, 181,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(panelQuanLySPLayout.createSequentialGroup().addComponent(labelMaNCC)
												.addGap(18, 18, 18).addComponent(cbMaNCC,
														javax.swing.GroupLayout.PREFERRED_SIZE, 181,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(panelQuanLySPLayout.createSequentialGroup()
												.addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 141,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(86, 86, 86)))
								.addGap(18, 18, 18)))
						.addGroup(panelQuanLySPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(panelQuanLySPLayout.createSequentialGroup().addGroup(panelQuanLySPLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
										.addGroup(panelQuanLySPLayout.createSequentialGroup().addGap(67, 67, 67)
												.addGroup(panelQuanLySPLayout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
														.addGroup(panelQuanLySPLayout.createSequentialGroup()
																.addComponent(labelMaSP).addGap(18, 18, 18)
																.addComponent(txtMaSP,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 181,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
														.addGroup(panelQuanLySPLayout.createSequentialGroup()
																.addComponent(labelTenTG).addGap(18, 18, 18)
																.addComponent(txtTenTG,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 181,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
														.addGroup(panelQuanLySPLayout.createSequentialGroup()
																.addComponent(labelSoLuongTon).addGap(18, 18, 18)
																.addComponent(txtSoLuongTon,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 181,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
										.addGroup(panelQuanLySPLayout.createSequentialGroup()
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
												.addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 141,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84,
														Short.MAX_VALUE)
												.addComponent(btnLuu, javax.swing.GroupLayout.PREFERRED_SIZE, 141,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(85, 85, 85)))
										.addGroup(panelQuanLySPLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addGroup(panelQuanLySPLayout.createSequentialGroup()
														.addGroup(panelQuanLySPLayout
																.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
																		panelQuanLySPLayout.createSequentialGroup()
																				.addComponent(labelTenSP)
																				.addGap(18, 18, 18)
																				.addComponent(txtTenSP,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						181,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
																		panelQuanLySPLayout.createSequentialGroup()
																				.addComponent(labelTrangThai)
																				.addGap(18, 18, 18)
																				.addComponent(txtTrangThai,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						181,
																						javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
																		panelQuanLySPLayout.createSequentialGroup()
																				.addComponent(labelSoTrang)
																				.addGap(18, 18, 18)
																				.addComponent(txtSoTrang,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						181,
																						javax.swing.GroupLayout.PREFERRED_SIZE)))
														.addGap(75, 75, 75))
												.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
														panelQuanLySPLayout.createSequentialGroup()
																.addGroup(panelQuanLySPLayout.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.TRAILING)
																		.addGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				panelQuanLySPLayout
																						.createSequentialGroup()
																						.addComponent(btnTim,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								141,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addGap(46, 46, 46)
																						.addComponent(labelTenSPTimKiem)
																						.addGap(0, 34, Short.MAX_VALUE))
																		.addGroup(panelQuanLySPLayout
																				.createSequentialGroup()
																				.addComponent(btnIn,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						141,
																						javax.swing.GroupLayout.PREFERRED_SIZE)
																				.addPreferredGap(
																						javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addComponent(btnReset,
																						javax.swing.GroupLayout.PREFERRED_SIZE,
																						141,
																						javax.swing.GroupLayout.PREFERRED_SIZE)))
																.addGap(27, 27, 27))))
								.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
										panelQuanLySPLayout.createSequentialGroup()
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(txtTenSPTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE,
														160, javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGap(48, 48, 48))))
				.addGroup(panelQuanLySPLayout.createSequentialGroup()
						.addGroup(panelQuanLySPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(panelQuanLySPLayout.createSequentialGroup().addGap(28, 28, 28)
										.addComponent(btnThoat).addGap(310, 310, 310).addComponent(labelQLSP))
								.addGroup(panelQuanLySPLayout.createSequentialGroup().addGap(36, 36, 36)
										.addComponent(btnChonanh)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		panelQuanLySPLayout.setVerticalGroup(panelQuanLySPLayout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(panelQuanLySPLayout.createSequentialGroup().addContainerGap()
						.addGroup(panelQuanLySPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(btnThoat).addComponent(labelQLSP))
						.addGap(23, 23, 23)
						.addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(panelQuanLySPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(labelHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 150,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(panelQuanLySPLayout.createSequentialGroup()
										.addGroup(panelQuanLySPLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
												.addComponent(labelMaSP).addComponent(txtMaSP).addComponent(labelTenSP)
												.addComponent(txtTenSP).addComponent(labelLoaiSP).addComponent(cbLoaiSP,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(39, 39, 39)
										.addGroup(panelQuanLySPLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(labelDonGia).addComponent(txtDonGia)
												.addComponent(labelSoLuongTon).addComponent(txtSoLuongTon)
												.addComponent(labelTrangThai).addComponent(txtTrangThai,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(35, 35, 35)))
						.addGroup(panelQuanLySPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(panelQuanLySPLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(labelTenTG).addComponent(txtTenTG).addComponent(labelSoTrang)
										.addComponent(txtSoTrang))
								.addGroup(panelQuanLySPLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(labelMaNCC).addComponent(cbMaNCC,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(10, 10, 10).addComponent(btnChonanh)
						.addGroup(panelQuanLySPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(panelQuanLySPLayout.createSequentialGroup().addGap(8, 8, 8)
										.addGroup(panelQuanLySPLayout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(labelNXB).addComponent(txtNXB))
										.addGap(18, 18, 18).addComponent(btnTim))
								.addGroup(panelQuanLySPLayout.createSequentialGroup()
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
										.addComponent(labelTenSPTimKiem).addGap(18, 18, 18)
										.addComponent(txtTenSPTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
												javax.swing.GroupLayout.PREFERRED_SIZE)))
						.addGap(41, 41, 41)
						.addGroup(panelQuanLySPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(btnSua).addComponent(btnLuu).addComponent(btnIn).addComponent(btnReset)
								.addComponent(btnXoa).addComponent(btnThem))
						.addContainerGap()));

		tableQuanLySP.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Loại sản phẩm", "Mã sản phẩm", "Tên sản phẩm", "Đơn giá", "Số lượng tồn", "Trạng thái",
				"Mã nhà sản xuất", "Tên tác giả", "Số trang", "Nhà xuất bản" }) {
			/**
			 * 
			 */
			private static final long serialVersionUID = 1L;
			boolean[] canEdit = new boolean[] { false, false, false, false, false, false, false, false, false, false };

			public boolean isCellEditable(int rowIndex, int columnIndex) {
				return canEdit[columnIndex];
			}
		});
		jScrollPane1.setViewportView(tableQuanLySP);
		tableQuanLySP.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				tableQuanLySPMouseClicked(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addContainerGap()
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addComponent(jScrollPane1).addComponent(panelQuanLySP, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addContainerGap()
						.addComponent(panelQuanLySP, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addGap(18, 18, 18).addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap()));

		pack();

	}

	private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnThoatActionPerformed
		dispose();
		new HomeFrame().setVisible(true);
	}// GEN-LAST:event_btnThoatActionPerformed

	private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSuaActionPerformed
		enabled();
		btnLuu.setEnabled(true);
		btnThem.setEnabled(false);
		btnXoa.setEnabled(false);
		chucnang = 0;

	}// GEN-LAST:event_btnSuaActionPerformed

	private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLuuActionPerformed
		try {
			if (chucnang == 1) {
				insertSanpham();
			} else {
				int yes = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn cập nhật Sản phẩm này?", "Cảnh báo",
						JOptionPane.YES_NO_CANCEL_OPTION);
				if (yes == JOptionPane.YES_OPTION) {
					updateSanpham();
				}
			}
			path = "";
			refesh();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}// GEN-LAST:event_btnLuuActionPerformed

	private void btnInActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnInActionPerformed

	}// GEN-LAST:event_btnInActionPerformed

	private void btnXoaActionPerformed(ActionEvent evt) throws SQLException {
		deleteSanpham(txtMaSP.getText().trim());
	}

	private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnResetActionPerformed
		try {
			refesh();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}// GEN-LAST:event_btnResetActionPerformed

	private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnTimActionPerformed

		String tukhoa = txtTenSPTimKiem.getText();
		List<Sanpham> dsSPtim;
		try {
			dsSPtim = new DAO_Sanpham().getSanpham(tukhoa);
			DefaultTableModel model = new DefaultTableModel(new Object[] { "Loại sản phẩm", "Mã sản phẩm", "Tên sản phẩm",
					"Đơn giá", "Số lượng tồn", "Trạng thái", "Nhà sản xuất", "Tên tác giả", "Số trang", "Nhà xuất bản" },
					0);
			for (Sanpham sanpham : dsSPtim) {
				int sotrang = sanpham.getSotrang();
				String st;
				if (sotrang == 0) {
					st = "";
				} else
					st = sanpham.getSotrang() + "";
				Object[] tableModel = { sanpham.getLoaiSp().getTenLoaiSp(), sanpham.getMaSanpham(), sanpham.getTenSanpham(),
						sanpham.getDongia() + "", sanpham.getSoluongton(), sanpham.getTrangthai(),
						sanpham.getNhaCC().getTenNCC(), sanpham.getTenTacgia(), st, sanpham.getNhaXB() };
				model.addRow(tableModel);
			}
			tableQuanLySP.setModel(model);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}// GEN-LAST:event_btnTimActionPerformed

	private void btnChonanhActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnChonanhActionPerformed
		JFileChooser chooser = new JFileChooser();
		chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
		chooser.setDialogTitle("Chọn ảnh");

		FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Image", "jpg", "png");
		chooser.addChoosableFileFilter(filter);

		int result = chooser.showSaveDialog(null);
		File file = chooser.getSelectedFile();
		String filename = file.getName();
		if (filename.endsWith(".jpg") || filename.endsWith(".JPG") || filename.endsWith(".png")
				|| filename.endsWith(".PNG")) {
			if (result == JFileChooser.APPROVE_OPTION) {
				path = file.getAbsolutePath();
				ImageIcon imgIcon = new ImageIcon(path);
				Image img = imgIcon.getImage();

				Image newImg = img.getScaledInstance(labelHinhAnh.getWidth(), labelHinhAnh.getHeight(),
						Image.SCALE_SMOOTH);

				ImageIcon icon = new ImageIcon(newImg);
				labelHinhAnh.setIcon(icon);

			}
		} else
			JOptionPane.showMessageDialog(this, "Chọn sai tệp, vui lòng chọn tệp hình ảnh");
	}// GEN-LAST:event_btnChonanhActionPerformed

	private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnThemActionPerformed
		try {
			refesh();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		enabled();
		btnLuu.setEnabled(true);
		txtMaSP.setEnabled(false);
		labelHinhAnh.setIcon(null);
		btnSua.setEnabled(false);
		btnXoa.setEnabled(false);
		chucnang = 1;
	}// GEN-LAST:event_btnThemActionPerformed

	private void tableQuanLySPMouseClicked(MouseEvent evt) {
		int click = tableQuanLySP.getSelectedRow();
		TableModel tableModel = tableQuanLySP.getModel();
		cbLoaiSP.setSelectedItem(tableModel.getValueAt(click, 0).toString());
		txtMaSP.setText(tableModel.getValueAt(click, 1).toString());
		txtTenSP.setText(tableQuanLySP.getValueAt(click, 2).toString());
		txtDonGia.setText(tableModel.getValueAt(click, 3).toString());
		txtSoLuongTon.setText(tableModel.getValueAt(click, 4).toString());
		if (Integer.parseInt(tableModel.getValueAt(click, 4).toString()) > 0) {
			txtTrangThai.setText("Còn hàng");
		} else
			txtTrangThai.setText("Hết hàng");
		cbMaNCC.setSelectedItem(tableModel.getValueAt(click, 1).toString());
		txtTenTG.setText(tableModel.getValueAt(click, 7).toString());
		txtSoTrang.setText(tableModel.getValueAt(click, 8).toString());
		txtNXB.setText(tableModel.getValueAt(click, 8).toString());
		btnSua.setEnabled(true);
		btnXoa.setEnabled(true);
		DAO_Sanpham dao_sanpham = new DAO_Sanpham();
		try {

			path = dao_sanpham.getImg(tableModel.getValueAt(click, 1).toString());
			ImageIcon icon = new ImageIcon(path);
			Image img = icon.getImage();
			Image newImg = img.getScaledInstance(labelHinhAnh.getWidth(), labelHinhAnh.getHeight(), Image.SCALE_SMOOTH);
			ImageIcon imgIcon = new ImageIcon(newImg);
			labelHinhAnh.setIcon(imgIcon);

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	private void cbLoaiSPPopupMenuWillBecomeInvisible(PopupMenuEvent e) {
		String tenLoaiSP = cbLoaiSP.getSelectedItem().toString();
		if (tenLoaiSP.equals("Sách") || tenLoaiSP.equals("Truyện")) {
			txtTenTG.setEnabled(true);
			txtNXB.setEnabled(true);
			txtSoTrang.setEnabled(true);
		} else {
			txtTenTG.setEnabled(false);
			txtNXB.setEnabled(false);
			txtSoTrang.setEnabled(false);
		}
	}

	private void disabled() {
		txtDonGia.setEnabled(false);
		txtMaSP.setEnabled(false);
		txtNXB.setEnabled(false);
		txtSoLuongTon.setEnabled(false);
		txtSoTrang.setEnabled(false);
		txtTenSP.setEnabled(false);
		txtTenTG.setEnabled(false);
		txtTrangThai.setEnabled(false);
		btnIn.setEnabled(false);
		btnLuu.setEnabled(false);
		btnSua.setEnabled(false);
		btnChonanh.setEnabled(false);
		btnXoa.setEnabled(false);
		cbLoaiSP.setEnabled(false);
		cbMaNCC.setEnabled(false);
	}

	private void enabled() {
		txtDonGia.setEnabled(true);
		txtMaSP.setEnabled(true);
		txtNXB.setEnabled(true);
		txtSoLuongTon.setEnabled(true);
		txtSoTrang.setEnabled(true);
		txtTenSP.setEnabled(true);
		txtTenSPTimKiem.setEnabled(true);
		txtTenTG.setEnabled(true);
		btnChonanh.setEnabled(true);
		cbLoaiSP.setEnabled(true);
		cbMaNCC.setEnabled(true);
	}

	private void refesh() throws SQLException {
		disabled();
		btnThem.setEnabled(true);
		txtDonGia.setText("");
		txtMaSP.setText("");
		txtNXB.setText("");
		txtSoLuongTon.setText("");
		txtSoLuongTon.setText("");
		txtSoTrang.setText("");
		txtTenSP.setText("");
		txtTenSPTimKiem.setText("");
		txtTenTG.setText("");
		txtTrangThai.setText("");
		cbLoaiSP.setSelectedIndex(0);
		cbMaNCC.setSelectedIndex(0);
		labelHinhAnh.setIcon(null);
		showProductTable();
	}

	private void showProductTable() throws SQLException {
		model = new DefaultTableModel(new Object[] { "Loại sản phẩm", "Mã sản phẩm", "Tên sản phẩm", "Đơn giá",
				"Số lượng tồn", "Trạng thái", "Nhà sản xuất", "Tên tác giả", "Số trang", "Nhà xuất bản" }, 0);
		DAO_Sanpham dao_sanpham = new DAO_Sanpham();
		List<Sanpham> list = dao_sanpham.getDsSach();
		if (list.size() == 0) {
			JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm, Vui lòng thử lại");
		} else {
			for (Sanpham sanpham : list) {
				int sotrang = sanpham.getSotrang();
				String st;
				if (sotrang == 0) {
					st = "";
				} else
					st = sanpham.getSotrang() + "";
				Object[] tableModel = { sanpham.getLoaiSp().getTenLoaiSp(), sanpham.getMaSanpham(),
						sanpham.getTenSanpham(), sanpham.getDongia() + "", sanpham.getSoluongton(),
						sanpham.getTrangthai(), sanpham.getNhaCC().getTenNCC(), sanpham.getTenTacgia(), st,
						sanpham.getNhaXB() };
				model.addRow(tableModel);
			}
			tableQuanLySP.setModel(model);
		}

	}

//    private void loadCbLoaiSp() throws SQLException {
//    	DAO_Sanpham dao_sanpham = new DAO_Sanpham();
//    	cbLoaiSP.removeAllItems();
//    	List<LoaiSanpham> loaisp = dao_sanpham.getLoaiSanpham();
//    	for(LoaiSanpham lsp : loaisp) {
//    		cbLoaiSP.addItem(lsp.getTenLoaiSp());
//    	}
//    }
	private void loadCbNhacungcap() throws SQLException {
		DAO_Sanpham dao_sanpham = new DAO_Sanpham();
		cbMaNCC.removeAllItems();
		List<NhaCungcap> dsNhacungcap = dao_sanpham.getNhacungcap();
		for (NhaCungcap nhacungcap : dsNhacungcap) {
			cbMaNCC.addItem(nhacungcap.getTenNCC());
		}
	}

	private void deleteSanpham(String id) throws SQLException {
		DAO_Sanpham dao_sanpham = new DAO_Sanpham();
		int yes = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa Sản phẩm này?", "Cảnh báo",
				JOptionPane.YES_NO_CANCEL_OPTION);

		if (yes == JOptionPane.YES_OPTION) {
			if (dao_sanpham.deleteSanpham(id)) {
				JOptionPane.showMessageDialog(this, "Sản phẩm đã được xóa");

			} else
				JOptionPane.showMessageDialog(this, "Xoá không thành công, Vui lòng kiếm tra lại");
		}
		showProductTable();
		disabled();
	}

	private void insertSanpham() throws SQLException {

		DAO_Sanpham dao_sanpham = new DAO_Sanpham();

		String tenLoaiSP = cbLoaiSP.getSelectedItem().toString();
		String tenNhaCC = cbMaNCC.getSelectedItem().toString();
		Sanpham sanpham = new Sanpham();
		List<LoaiSanpham> dsLoaiSp = dao_sanpham.getLoaiSanpham();
		for (LoaiSanpham loaisp : dsLoaiSp) {
			if (loaisp.getTenLoaiSp().equals(tenLoaiSP)) {
				sanpham.setLoaiSp(new LoaiSanpham(loaisp.getMaLoaiSp(), loaisp.getTenLoaiSp()));
			}

		}
		if (txtSoTrang.getText().equals("")) {
			sanpham.setSotrang(0);
		} else {
			sanpham.setSotrang(Integer.parseInt(txtSoTrang.getText().trim()));
		}
		List<NhaCungcap> dsNhacc = dao_sanpham.getNhacungcap();
		for (NhaCungcap nhacc : dsNhacc) {
			if (nhacc.getTenNCC().equals(tenNhaCC)) {
				sanpham.setNhaCC(new NhaCungcap(nhacc.getMaNCC(), nhacc.getTenNCC(), nhacc.getDiachi()));
			}
		}
		if (Integer.parseInt(txtSoLuongTon.getText().trim()) > 0) {
			txtTrangThai.setText("Còn hàng");
		} else {
			txtTrangThai.setText("Hết hàng");
		}
		sanpham.setTenSanpham(txtTenSP.getText().trim());
		sanpham.setDongia(Double.parseDouble(txtDonGia.getText().trim()));
		sanpham.setSoluongton(Integer.parseInt(txtSoLuongTon.getText().trim()));
		sanpham.setTrangthai(txtTrangThai.getText());
		sanpham.setTenTacgia(txtTenTG.getText().trim());
		sanpham.setNhaXB(txtNXB.getText());
		if (dao_sanpham.insertSanpham(sanpham, path)) {
			JOptionPane.showMessageDialog(this, "Thêm thành công!!");
			showProductTable();
		} else {
			JOptionPane.showMessageDialog(this, "Thêm không thành công! Hãy thử lại");
		}

	}

	private void updateSanpham() throws SQLException {
		DAO_Sanpham dao_sanpham = new DAO_Sanpham();
		String tenLoaiSP = cbLoaiSP.getSelectedItem().toString();
		String tenNhaCC = cbMaNCC.getSelectedItem().toString();
		Sanpham sanpham = new Sanpham();
		List<LoaiSanpham> dsLoaiSp = dao_sanpham.getLoaiSanpham();
		for (LoaiSanpham loaisp : dsLoaiSp) {
			if (loaisp.getTenLoaiSp().equals(tenLoaiSP)) {
				sanpham.setLoaiSp(new LoaiSanpham(loaisp.getMaLoaiSp(), loaisp.getTenLoaiSp()));
			}

		}
		if (txtSoTrang.getText().equals("")) {
			sanpham.setSotrang(0);
		} else {
			sanpham.setSotrang(Integer.parseInt(txtSoTrang.getText().trim()));
		}
		List<NhaCungcap> dsNhacc = dao_sanpham.getNhacungcap();
		for (NhaCungcap nhacc : dsNhacc) {
			if (nhacc.getTenNCC().equals(tenNhaCC)) {
				sanpham.setNhaCC(new NhaCungcap(nhacc.getMaNCC(), nhacc.getTenNCC(), nhacc.getDiachi()));
			}
		}
		if (Integer.parseInt(txtSoLuongTon.getText().trim()) > 0) {
			txtTrangThai.setText("Còn hàng");
		} else {
			txtTrangThai.setText("Hết hàng");
		}
		sanpham.setMaSanpham(Integer.parseInt(txtMaSP.getText().trim()));
		sanpham.setTenSanpham(txtTenSP.getText().trim());
		sanpham.setDongia(Double.parseDouble(txtDonGia.getText().trim()));
		sanpham.setSoluongton(Integer.parseInt(txtSoLuongTon.getText().trim()));
		sanpham.setTrangthai(txtTrangThai.getText());
		sanpham.setTenTacgia(txtTenTG.getText().trim());
		sanpham.setNhaXB(txtNXB.getText());
		if (dao_sanpham.updateSanpham(sanpham, path)) {
			JOptionPane.showMessageDialog(this, "Cập nhật Sản phẩm thành công!");
			showProductTable();
		} else {
			JOptionPane.showMessageDialog(this, "Cập nhật Sản phẩm thất bại, Hãy thử lại!");

		}
	}

	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(BookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(BookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(BookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(BookFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					new BookFrame().setVisible(true);
				} catch (SQLException ex) {
					Logger.getLogger(BookFrame.class.getName()).log(Level.SEVERE, null, ex);
				}
			}
		});
	}

}
